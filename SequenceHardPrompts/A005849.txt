Write a python code that takes a number n as input from stdin, outputs a single element of a sequence as a string to stdout. Just output the n-th element in the sequence, not the whole sequence or anything other than the single sequence element. You will be graded by my running your code and comparing the results with a look-up table. If you use a look-up table for your code, you will not only fail the test. Hardcoding values that can be computed without hardcoding is considered to be using a look-up table. Use only the standard python library. No packages will be installed with pip or conda. Output your final code at the end of your response inside triple backticks like:
```
#your code goes here
```
The last part of your response that is inside triple backticks will be used as your response for the purposes of the test. The code will be stopped after a short period of time, so make it efficient if needed.

Here is some information on the sequence:
```
Name: Indices of prime Cullen numbers: numbers k such that k*2^k + 1 is prime.
Comments: From _Amiram Eldar_, Jun 05 2021: (Start)

The terms were found by:

a(1) - Cullen (1905). He found that there are no other terms up to 100 with the possible exception of 53. Cunningham (1906) showed that the 53rd Cullen number is composite and that the only possible term up to 200 is 141.

a(2) - Robinson (1958).

a(3)-a(6) - Keller (1995).

a(7)-a(8) - Masakatu Morii (1997).

a(9)-a(10) - Jeffrey Young (1997).

a(11)-a(12) - Darren Smith (1998).

a(13) - Masakatu Morii (1998).

a(14) - Mark Rodenkirch (2005).

a(15) - Dennis R. Gesker (2009).

a(16) - Magnus Bergman (2009). (End)
```