Write a python code that takes a number n as input from stdin, outputs a single element of a sequence as a string to stdout. Just output the n-th element in the sequence, not the whole sequence or anything other than the single sequence element. You will be graded by my running your code and comparing the results with a look-up table. If you use a look-up table for your code, you will not only fail the test. Hardcoding values that can be computed without hardcoding is considered to be using a look-up table. Use only the standard python library. No packages will be installed with pip or conda. Output your final code at the end of your response inside triple backticks like:
```
#your code goes here
```
The last part of your response that is inside triple backticks will be used as your response for the purposes of the test. The code will be stopped after a short period of time, so make it efficient if needed.

Here is some information on the sequence:
```
Name: Number of n-celled polyominoes with holes.
Comments: From _John Mason_, Sep 06 2022: (Start)

Conjecture: Almost all polyominoes are holey. In other words, a(n)/A000105(n) tends to 1 for increasing n.

The number of holes in a polyomino is given by the formula (based on a generalization of Pick's Theorem): H = n + 1 - i - s / 2, where:

n is the size (area) of the polyomino;

i is the number of completely internal vertices; i.e., the number of vertices that are surrounded by 4 squares;

s is the number of vertices on a single border; i.e., vertices that are the corners of 1, 2 or 3 squares, but excluding those that touch only 2 squares that are diagonally adjacent. (End)
```