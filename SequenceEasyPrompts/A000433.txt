Write a python code that takes a number n as input from stdin, outputs a single element of a sequence as a string to stdout. Just output the n-th element in the sequence, not the whole sequence or anything other than the single sequence element. You will be graded by my running your code and comparing the results with a look-up table. If you use a look-up table for your code, you will not only fail the test. Hardcoding values that can be computed without hardcoding is considered to be using a look-up table. Use only the standard python library. No packages will be installed with pip or conda. Output your final code at the end of your response inside triple backticks like:
```
#your code goes here
```
The last part of your response that is inside triple backticks will be used as your response for the purposes of the test. The code will be stopped after a short period of time, so make it efficient if needed.

Here is some information on the sequence:
```
Name: n written in base where place values are positive cubes.
Comments: Let [d1, d2, d3, ...] be the decimal expansion of the n-th term, then dk is the number of times that the greedy algorithm subtracts the cube k^3 with input n. - _Joerg Arndt_, Nov 21 2014

For n > 1: A048766(n) = number of digits of a(n); A190311(n) = number of nonzero digits of a(n); A055401(n) = sum of digits of a(n). - _Reinhard Zumkeller_, May 08 2011

First differs from numbers written in base 8 (A007094) at a(27) = 100, whereas A007094(27) = 33. - _Alonso del Arte_, Nov 27 2014

The rightmost (least significant) digit never exceeds 7, the second digit from the right never exceeds 3, the third digit never exceeds 2, and the rest are just 0's and 1's. - _Ivan Neretin_, Sep 03 2015
```