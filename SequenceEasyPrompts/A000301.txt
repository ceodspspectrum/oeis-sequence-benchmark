Write a python code that takes a number n as input from stdin, outputs a single element of a sequence as a string to stdout. Just output the n-th element in the sequence, not the whole sequence or anything other than the single sequence element. You will be graded by my running your code and comparing the results with a look-up table. If you use a look-up table for your code, you will not only fail the test. Hardcoding values that can be computed without hardcoding is considered to be using a look-up table. Use only the standard python library. No packages will be installed with pip or conda. Output your final code at the end of your response inside triple backticks like:
```
#your code goes here
```
The last part of your response that is inside triple backticks will be used as your response for the purposes of the test. The code will be stopped after a short period of time, so make it efficient if needed.

Here is some information on the sequence:
```
Name: a(n) = a(n-1)*a(n-2) with a(0) = 1, a(1) = 2; also a(n) = 2^Fibonacci(n).
Comments: Continued fraction expansion of s = A073115 = 1.709803442861291... = Sum_{k >= 0} (1/2^floor(k * phi)) where phi is the golden ratio (1 + sqrt(5))/2. - _Benoit Cloitre_, Aug 19 2002

The continued fraction expansion of the above constant s is [1; 1, 2, 2, 4, ...], that of the rabbit constant r = s-1 = A014565 is [0; 1, 2, 2, 4, ...]. - _M. F. Hasler_, Nov 10 2018
```