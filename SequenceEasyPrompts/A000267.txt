Write a python code that takes a number n as input from stdin, outputs a single element of a sequence as a string to stdout. Just output the n-th element in the sequence, not the whole sequence or anything other than the single sequence element. You will be graded by my running your code and comparing the results with a look-up table. If you use a look-up table for your code, you will not only fail the test. Hardcoding values that can be computed without hardcoding is considered to be using a look-up table. Use only the standard python library. No packages will be installed with pip or conda. Output your final code at the end of your response inside triple backticks like:
```
#your code goes here
```
The last part of your response that is inside triple backticks will be used as your response for the purposes of the test. The code will be stopped after a short period of time, so make it efficient if needed.

Here is some information on the sequence:
```
Name: Integer part of square root of 4n+1.
Comments: 1^1, 2^1, 3^2, 4^2, 5^3, 6^3, 7^4, 8^4, 9^5, 10^5, ...

Start with n, repeatedly subtract the square root of the previous term; a(n) gives number of steps to reach 0. - _Robert G. Wilson v_, Jul 22 2002

Triangle A094727 read by diagonals. - _Philippe Del√©ham_, Mar 21 2014

Partial sums of A240025; a(n) = number of quarter squares <= n. - _Reinhard Zumkeller_, Jul 05 2014

Every number k is present consecutively (floor((2*k+3)/4)) times. - _Bernard Schott_, Jun 08 2019
```