Write a python code that takes a number n as input from stdin, outputs a single element of a sequence as a string to stdout. Just output the n-th element in the sequence, not the whole sequence or anything other than the single sequence element. You will be graded by my running your code and comparing the results with a look-up table. If you use a look-up table for your code, you will not only fail the test. Hardcoding values that can be computed without hardcoding is considered to be using a look-up table. Use only the standard python library. No packages will be installed with pip or conda. Output your final code at the end of your response inside triple backticks like:
```
#your code goes here
```
The last part of your response that is inside triple backticks will be used as your response for the purposes of the test. The code will be stopped after a short period of time, so make it efficient if needed.

Here is some information on the sequence:
```
Name: Eulerian numbers (Euler's triangle: column k=3 of A008292, column k=2 of A173018).
Comments: There are 2 versions of Euler's triangle:

* A008292 Classic version of Euler's triangle used by Comtet (1974).

* A173018 Version of Euler's triangle used by Graham, Knuth and Patashnik in Concrete Math. (1990).

Euler's triangle rows and columns indexing conventions:

* A008292 The rows and columns of the Eulerian triangle are both indexed starting from 1. (Classic version: used in the classic books by Riordan and Comtet.)

* A173018 The rows and columns of the Eulerian triangle are both indexed starting from 0. (Graham et al.)

Number of permutations of [n] with exactly 2 descents. - _Mike Zabrocki_, Nov 10 2004
```