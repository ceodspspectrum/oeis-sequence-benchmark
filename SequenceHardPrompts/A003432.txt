Write a python code that takes a number n as input from stdin, outputs a single element of a sequence as a string to stdout. Just output the n-th element in the sequence, not the whole sequence or anything other than the single sequence element. You will be graded by my running your code and comparing the results with a look-up table. If you use a look-up table for your code, you will not only fail the test. Hardcoding values that can be computed without hardcoding is considered to be using a look-up table. Use only the standard python library. No packages will be installed with pip or conda. Output your final code at the end of your response inside triple backticks like:
```
#your code goes here
```
The last part of your response that is inside triple backticks will be used as your response for the purposes of the test. The code will be stopped after a short period of time, so make it efficient if needed.

Here is some information on the sequence:
```
Name: Hadamard maximal determinant problem: largest determinant of a (real) {0,1}-matrix of order n.
Comments: The entries are restricted to 0 and 1; the determinant is computed in the field of real numbers.

Suppose M = (m(i,j)) is an n X n matrix of real numbers. Let

a(n) = max det M subject to m(i,j) = 0 or 1 [this sequence],

g(n) = max det M subject to m(i,j) = -1 or 1 [A003433],

h(n) = max det M subject to m(i,j) = -1, 0 or 1 [A003433],

F(n) = max det M subject to 0 <= m(i,j) <= 1 [this sequence],

G(n) = max det M subject to -1 <= m(i,j) <= 1 [A003433].

Then a(n) = F(n), g(n) = h(n) = G(n), g(n) = 2^(n-1)*a(n-1). Thus all five problems are equivalent.

Hadamard proved that a(n) <= 2^(-n)*(n+1)^((n+1)/2), with equality if and only if a Hadamard matrix of order n+1 exists. Equivalently, g(n) <= n^(n/2), with equality if and only if a Hadamard matrix of order n exists. It is believed that a Hadamard matrix of order n exists if and only if n = 1, 2 or a multiple of 4 (see A036297).

We have a(21) = 195312500?, a(22) = 662671875?, and a(36) = 1200757082375992968. Furthermore, starting with a(23), many constructions are known that attain the upper bounds of Hadamard, Barba, and Ehlich-Wojtas, and are therefore maximal. See the Orrick-Solomon web site for further information. [Edited by _William P. Orrick_, Dec 20 2011]

The entry a(21) = 195312500 is now known to be correct. [Edited by _Richard P. Brent_, Aug 17 2021]
```