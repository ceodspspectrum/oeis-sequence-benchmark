Write a python code that takes a number n as input from stdin, outputs a single element of a sequence as a string to stdout. Just output the n-th element in the sequence, not the whole sequence or anything other than the single sequence element. You will be graded by my running your code and comparing the results with a look-up table. If you use a look-up table for your code, you will not only fail the test. Hardcoding values that can be computed without hardcoding is considered to be using a look-up table. Use only the standard python library. No packages will be installed with pip or conda. Output your final code at the end of your response inside triple backticks like:
```
#your code goes here
```
The last part of your response that is inside triple backticks will be used as your response for the purposes of the test. The code will be stopped after a short period of time, so make it efficient if needed.

Here is some information on the sequence:
```
Name: Number of n-dimensional cuboids with integral edge lengths for which volume = surface area.
Comments: For n>1 it is always true that a(n) > 0 because for dimension n we always have the n-dimensional cuboid with all edge lengths = 2n = A062971(n) having hypervolume (2n)^n equal to "surface hyper-area". - _Jonathan Vos Post_, Mar 15 2006

Number of nondecreasing tuples (x_1, x_2, ..., x_n) such that 1/2 = 1/x_1 + 1/x_2 + ... + 1/x_n. - _Lewis Chen_, Dec 20 2019
```