Write a python code that takes a number n as input from stdin, outputs a single element of a sequence as a string to stdout. Just output the n-th element in the sequence, not the whole sequence or anything other than the single sequence element. You will be graded by my running your code and comparing the results with a look-up table. If you use a look-up table for your code, you will not only fail the test. Hardcoding values that can be computed without hardcoding is considered to be using a look-up table. Use only the standard python library. No packages will be installed with pip or conda. Output your final code at the end of your response inside triple backticks like:
```
#your code goes here
```
The last part of your response that is inside triple backticks will be used as your response for the purposes of the test. The code will be stopped after a short period of time, so make it efficient if needed.

Here is some information on the sequence:
```
Name: Number of simple imperfect squared squares of order n up to symmetry.
Comments: A squared rectangle (which may be a square) is a rectangle dissected into a finite number, two or more, of squares. If no two of these squares have the same size the squared rectangle is perfect. A squared rectangle is simple if it does not contain a smaller squared rectangle. The order of a squared rectangle is the number of constituent squares. - _Geoffrey H. Morley_, Oct 17 2012

Orders 15 to 19 were enumerated by C. J. Bowkamp and A. J. W. Duijvestijn (1962). Orders 20 to 29 were enumerated by Stuart Anderson (2010-2012). Orders 30 to 32 were enumerated by Lorenz Milla and Stuart Anderson (2013). - _Stuart E Anderson_, Sep 30 2013
```