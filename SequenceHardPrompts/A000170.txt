Write a python code that takes a number n as input from stdin, outputs a single element of a sequence as a string to stdout. Just output the n-th element in the sequence, not the whole sequence or anything other than the single sequence element. You will be graded by my running your code and comparing the results with a look-up table. If you use a look-up table for your code, you will not only fail the test. Hardcoding values that can be computed without hardcoding is considered to be using a look-up table. Use only the standard python library. No packages will be installed with pip or conda. Output your final code at the end of your response inside triple backticks like:
```
#your code goes here
```
The last part of your response that is inside triple backticks will be used as your response for the purposes of the test. The code will be stopped after a short period of time, so make it efficient if needed.

Here is some information on the sequence:
```
Name: Number of ways of placing n nonattacking queens on an n X n board.
Comments: For n > 3, a(n) is the number of maximum independent vertex sets in the n X n queen graph. - _Eric W. Weisstein_, Jun 20 2017

Number of nodes on level n of the backtrack tree for the n queens problem (a(n) = A319284(n, n)). - _Peter Luschny_, Sep 18 2018

Number of permutations of [1...n] such that |p(j)-p(i)| != j-i for i<j. - _Xiangyu Chen_, Dec 24 2020

M. Simkin shows that the number of ways to place n mutually nonattacking queens on an n X n chessboard is ((1 +/- o(1))*n*exp(-c))^n, where c = 1.942 +/- 0.003. These are approximately (0.143*n)^n configurations. - _Peter Luschny_, Oct 07 2021
```