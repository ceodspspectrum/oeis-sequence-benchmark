Write a python code that takes a number n as input from stdin, outputs a single element of a sequence as a string to stdout. Just output the n-th element in the sequence, not the whole sequence or anything other than the single sequence element. You will be graded by my running your code and comparing the results with a look-up table. If you use a look-up table for your code, you will not only fail the test. Hardcoding values that can be computed without hardcoding is considered to be using a look-up table. Use only the standard python library. No packages will be installed with pip or conda. Output your final code at the end of your response inside triple backticks like:
```
#your code goes here
```
The last part of your response that is inside triple backticks will be used as your response for the purposes of the test. The code will be stopped after a short period of time, so make it efficient if needed.

Here is some information on the sequence:
```
Name: Generalized class numbers c_(n,1).
Comments: Let L_a(s) = Sum_{k>=0} (-a|2k+1) /(2k+1)^s be a Dirichlet series, where (-a|2k+1) is the Jacobi symbol. Then the c_(a,n) are defined by L_a(2n+1) = (Pi/(2a))^(2n+1)*sqrt(a)*c_(a,n)/(2n)! for n=0,1,2,..., a=1,2,3,...
```