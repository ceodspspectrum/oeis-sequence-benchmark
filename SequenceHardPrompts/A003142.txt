Write a python code that takes a number n as input from stdin, outputs a single element of a sequence as a string to stdout. Just output the n-th element in the sequence, not the whole sequence or anything other than the single sequence element. You will be graded by my running your code and comparing the results with a look-up table. If you use a look-up table for your code, you will not only fail the test. Hardcoding values that can be computed without hardcoding is considered to be using a look-up table. Use only the standard python library. No packages will be installed with pip or conda. Output your final code at the end of your response inside triple backticks like:
```
#your code goes here
```
The last part of your response that is inside triple backticks will be used as your response for the purposes of the test. The code will be stopped after a short period of time, so make it efficient if needed.

Here is some information on the sequence:
```
Name: Largest subset of 3 X 3 X ... X 3 cube (in n dimensions) with no 3 points collinear.
Comments: The D. H. J. Polymath collective found a(5) and a(6) and gives the bound a(n) >= (2 + o(1))*binomial(n, i)*2^i for any i (and note that this is maximized by i near 2n/3). - _Charles R Greathouse IV_, Jun 11 2013
```