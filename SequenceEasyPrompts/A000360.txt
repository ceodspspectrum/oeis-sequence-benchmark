Write a python code that takes a number n as input from stdin, outputs a single element of a sequence as a string to stdout. Just output the n-th element in the sequence, not the whole sequence or anything other than the single sequence element. You will be graded by my running your code and comparing the results with a look-up table. If you use a look-up table for your code, you will not only fail the test. Hardcoding values that can be computed without hardcoding is considered to be using a look-up table. Use only the standard python library. No packages will be installed with pip or conda. Output your final code at the end of your response inside triple backticks like:
```
#your code goes here
```
The last part of your response that is inside triple backticks will be used as your response for the purposes of the test. The code will be stopped after a short period of time, so make it efficient if needed.

Here is some information on the sequence:
```
Name: Distribution of nonempty triangles inside a fractal rep-4-tile.
Comments: a(n) = Running count of congruent nonempty triangles along lines perpendicular to the base of the Gosper-Lafitte triangle.

Also, a(n) = Sum of the coefficients of the terms with an even exponent in the Stern polynomial B(n+1,t), or in other words, the sum of the even-indexed terms (the leftmost is at index 0) of the irregular triangle A125184, starting from its second row. - _Antti Karttunen_, Apr 20 2017

Back in May 1995, it was proved that a(n) = modulo 3 mapping, (+1,-1,+0)/2, of the Stern-Brocot sequence A002487, dropping its 1st term. - _M. Jeremie Lafitte (Levitas)_, Apr 23 2017
```