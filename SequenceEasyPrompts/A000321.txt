Write a python code that takes a number n as input from stdin, outputs a single element of a sequence as a string to stdout. Just output the n-th element in the sequence, not the whole sequence or anything other than the single sequence element. You will be graded by my running your code and comparing the results with a look-up table. If you use a look-up table for your code, you will not only fail the test. Hardcoding values that can be computed without hardcoding is considered to be using a look-up table. Use only the standard python library. No packages will be installed with pip or conda. Output your final code at the end of your response inside triple backticks like:
```
#your code goes here
```
The last part of your response that is inside triple backticks will be used as your response for the purposes of the test. The code will be stopped after a short period of time, so make it efficient if needed.

Here is some information on the sequence:
```
Name: H_n(-1/2), where H_n(x) is Hermite polynomial of degree n.
Comments: Binomial transform gives A067994. Inverse binomial transform gives A062267(n)*(-1)^n. - _Vladimir Reshetnikov_, Oct 11 2016

The congruence a(n+k) == (-1)^k*a(n) (mod k) holds for all n and k. It follows that for even k the sequence obtained by reducing a(n) modulo k is purely periodic with period a divisor of k, while for odd k the sequence obtained by reducing a(n) modulo k is purely periodic with period a divisor of 2*k. See A047974. - _Peter Bala_, Apr 10 2023
```