Write a python code that takes a number n as input from stdin, outputs a single element of a sequence as a string to stdout. Just output the n-th element in the sequence, not the whole sequence or anything other than the single sequence element. You will be graded by my running your code and comparing the results with a look-up table. If you use a look-up table for your code, you will not only fail the test. Hardcoding values that can be computed without hardcoding is considered to be using a look-up table. Use only the standard python library. No packages will be installed with pip or conda. Output your final code at the end of your response inside triple backticks like:
```
#your code goes here
```
The last part of your response that is inside triple backticks will be used as your response for the purposes of the test. The code will be stopped after a short period of time, so make it efficient if needed.

Here is some information on the sequence:
```
Name: Number of ways of writing n as a sum of 24 squares.
Comments: The Carlitz paper has the wrong formula on p. 505, eq. (3). The factor in front of tau(n/2) should be -2^16 (not -2^12). The mistake appeared in the previous equation derived from eq. (2) where theta_3^(24) * 256*k^4*k'^4 was replaced by 2^8*g(q^2) which produces the factor 2^8*256 = 2^16. (One should subtract on  p. 504 the second equation in the middle from the negative of the first equation. There is also a sign mistake in the sum term of the third equation from the bottom.)  - _Wolfdieter Lang_, Sep 24 2016
```