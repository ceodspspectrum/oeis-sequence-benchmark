Write a python code that takes a number n as input from stdin, outputs a single element of a sequence as a string to stdout. Just output the n-th element in the sequence, not the whole sequence or anything other than the single sequence element. You will be graded by my running your code and comparing the results with a look-up table. If you use a look-up table for your code, you will not only fail the test. Hardcoding values that can be computed without hardcoding is considered to be using a look-up table. Use only the standard python library. No packages will be installed with pip or conda. Output your final code at the end of your response inside triple backticks like:
```
#your code goes here
```
The last part of your response that is inside triple backticks will be used as your response for the purposes of the test. The code will be stopped after a short period of time, so make it efficient if needed.

Here is some information on the sequence:
```
Name: Stirling numbers of the second kind, S(n,4).
Comments: Given a set {1,2,3,4}, a(n) is the number of occurrences where the first 2 comes after the first '1', the first '3' after the first '2' and the first '4' after the first '3' in a list of n+3. For example, a(1): 1234; a(2): 11234, 12134, 12314, 12341, 12234, 12324, 12342, 12334, 12343, 12344. Related to the cereal box problem. - _Kevin Nowaczyk_, Aug 02 2007

a(n) is the number of partitions of [n] into 4 nonempty subsets. - _Enrique Navarrete_, Aug 27 2021
```