Write a python code that takes a number n as input from stdin, outputs a single element of a sequence as a string to stdout. Just output the n-th element in the sequence, not the whole sequence or anything other than the single sequence element. You will be graded by my running your code and comparing the results with a look-up table. If you use a look-up table for your code, you will not only fail the test. Hardcoding values that can be computed without hardcoding is considered to be using a look-up table. Use only the standard python library. No packages will be installed with pip or conda. Output your final code at the end of your response inside triple backticks like:
```
#your code goes here
```
The last part of your response that is inside triple backticks will be used as your response for the purposes of the test. The code will be stopped after a short period of time, so make it efficient if needed.

Here is some information on the sequence:
```
Name: Numbers m such that Fibonacci(m) ends with m.
Comments: Conjecture: Other than 1 and 5, there is no m such that Fibonacci(m) in binary ends with m in binary. The conjecture holds up to m=50000. - _Ralf Stephan_, Aug 21 2006

The conjecture for binary numbers holds for m < 2^25. - _T. D. Noe_, May 14 2007

Conjecture is true. It is easy to prove (by induction on k) that if Fibonacci(m) ends with m in binary, then m == 0, 1, or 5 (mod 3*2^k) for any positive integer k, i.e., m must simply be equal to 0, 1, or 5. - _Max Alekseyev_, Jul 03 2009
```