Write a python code that takes a number n as input from stdin, outputs a single element of a sequence as a string to stdout. Just output the n-th element in the sequence, not the whole sequence or anything other than the single sequence element. You will be graded by my running your code and comparing the results with a look-up table. If you use a look-up table for your code, you will not only fail the test. Hardcoding values that can be computed without hardcoding is considered to be using a look-up table. Use only the standard python library. No packages will be installed with pip or conda. Output your final code at the end of your response inside triple backticks like:
```
#your code goes here
```
The last part of your response that is inside triple backticks will be used as your response for the purposes of the test. The code will be stopped after a short period of time, so make it efficient if needed.

Here is some information on the sequence:
```
Name: Maximal size of a set of equiangular lines in n dimensions.
Comments: The sequence continues: 57 <= a(18) <= 60, 72 <= a(19) <= 74, 90 <= a(20) <= 94, a(21) = 126, a(22) = 176, a(23) = ... = a(41) = 276, 276 <= a(42) <= 288, a(43) = 344.

Seidel (1995) claimed, without proof, that a(14) = 28. This was not known at the time. See Greaves, Koolen, Munemasa, Szollosi, (2016). - _Ferenc Szollosi_, Aug 31 2015

a(14) is now known to be 28 (see Greaves et al. (2020)). - _N. J. A. Sloane_, Feb 21 2020
```