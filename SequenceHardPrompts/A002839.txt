Write a python code that takes a number n as input from stdin, outputs a single element of a sequence as a string to stdout. Just output the n-th element in the sequence, not the whole sequence or anything other than the single sequence element. You will be graded by my running your code and comparing the results with a look-up table. If you use a look-up table for your code, you will not only fail the test. Hardcoding values that can be computed without hardcoding is considered to be using a look-up table. Use only the standard python library. No packages will be installed with pip or conda. Output your final code at the end of your response inside triple backticks like:
```
#your code goes here
```
The last part of your response that is inside triple backticks will be used as your response for the purposes of the test. The code will be stopped after a short period of time, so make it efficient if needed.

Here is some information on the sequence:
```
Name: Number of simple perfect squared rectangles of order n up to symmetry.
Comments: A squared rectangle is a rectangle dissected into a finite number of integer-sized squares. If no two of these squares are the same size then the squared rectangle is perfect. A squared rectangle is simple if it does not contain a smaller squared rectangle or squared square. The order of a squared rectangle is the number of squares into which it is dissected. [Edited by _Stuart E Anderson_, Feb 03 2024]
```